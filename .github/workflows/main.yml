name: Heroku deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    env:
      EMAIL: ${{secrets.EMAIL}} 
      PASSWORD: ${{secrets.PASSWORD}}  
      HEROKU_API_TOKEN: ${{secrets.HEROKU_API_TOKEN}}  
      LAST_COMMIT_MESSAGE: ${{github.event.commits[0].message}}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      # Runs a single command using the runners shell
      - name: Run integration test
        working-directory: ./
        run: ./gradlew :backend:integrationTest

      - name: Remove wrong java versions
        working-directory: ./
        run: sudo apt remove temurin-8-jdk temurin-11-jdk

      - name: Set up env
        working-directory: ./
        run: sudo bash ./setup-env-java.sh

      - name: Run cypress tests
        working-directory: ./frontend
        run: CYPRESS_CACHE_FOLDER=./tmp/Cypress sudo npx cypress install --force && sudo npx cypress run --browser chrome

      - name: Destroy env
        working-directory: ./
        run: sudo bash ./backend/run-backend.sh stop

      - name: Heroku upload
        run: |  
          export JAVA_HOME=JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.1-12/x64
          sudo chmod +x "${GITHUB_WORKSPACE}/cicd/deploy.sh"
          sudo "${GITHUB_WORKSPACE}/cicd/deploy.sh" ${HEROKU_API_TOKEN} ${LAST_COMMIT_MESSAGE} false
        shell: bash
